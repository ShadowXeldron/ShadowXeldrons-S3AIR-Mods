// The project's second and almost certainly not final rewrite. Thanfully, It'll probably be a long time before the next rewrite.
// This version is by far the most optimised one yet, and switched from Standalone.playAudio to PlayMusic. 
//Now that I have learned more of this cruel art, I may decide to go back to using Standalone.playAudio at some point if it would be more compatible.

/*
	This script file is the primary compnent of the Per-Character Themes mod for Sonic 3 A.I.R. 
	Copyright (C) 2017-2022 by Eukaryot


	Some code is taken from the Sonic 3 A.I.R script software distribution, Copyright (C) 2017-2022 by Eukaryot

	This mod is published under the GNU GPLv3 open source software license, see LICENSE.txt
	or https://www.gnu.org/licenses/gpl-3.0.en.html
	
*/

/*

Just so that I remember them, here's the constants that I need to know

MUSIC_SUPER	
MUSIC_EXTRALIFE	
MUSIC_LEVELCLEAR	
MUSIC_CREDITSMEDLEY
MUSIC_INVINCIBLE
MUSIC_GAMEOVER

*/

// Config options
global u8 option.knux.clear
global u8 option.knux.specialclear
global u8 option.knux.1up
global u8 option.knux.super
global u8 option.knux.hyper
global u8 option.knux.gameover
global u8 option.knux.invincible
global u8 option.knux.credits

global u8 option.sonic.clear
global u8 option.sonic.specialclear
global u8 option.sonic.1up
global u8 option.sonic.super
global u8 option.sonic.hyper
global u8 option.sonic.gameover
global u8 option.sonic.invincible
global u8 option.sonic.credits

global u8 option.tails.clear
global u8 option.tails.specialclear
global u8 option.tails.1up
global u8 option.tails.super
global u8 option.tails.hyper
global u8 option.tails.gameover
global u8 option.tails.invincible
global u8 option.tails.credits

function void PlayMusic()
{

	u8 audioID = D0.u8 // This should tell us what the actual villager is going on.

	u8 charID = 0 // Used to check who is being played as. For now, it's unused.

// Let the triple trouble begin.

	if (audioID == MUSIC_INVINCIBLE) // Invincibility jingles
	{
		if (isMainCharacter(CHARACTER_KNUCKLES) && option.knux.invincible == 1)
		{
			Audio.playAudio("knux-invincible",0)
		}
		else if (isMainCharacter(CHARACTER_TAILS) && option.tails.invincible == 1)
		{
			Audio.playAudio("tails-invincible",0)
		}
		else if (isMainCharacter(CHARACTER_SONIC) && option.sonic.invincible == 1)
		{
			Audio.playAudio("sonic-invincible",0)
		}
		else
		{
			base.PlayMusic()
		}
	}

	else if (audioID == MUSIC_GAMEOVER) // Game over themes
	{
		if (isMainCharacter(CHARACTER_KNUCKLES) && option.knux.gameover == 1)
		{
			Audio.playAudio("knux-gameover",0)
		}

		else if (isMainCharacter(CHARACTER_TAILS) && option.tails.gameover == 1)
		{
			Audio.playAudio("tails-gameover",0)
		}

		else if (isMainCharacter(CHARACTER_SONIC) && option.sonic.gameover == 1)
		{
			Audio.playAudio("sonic-gameover",0)
		}

		else
		{
			Audio.playAudio(MUSIC_GAMEOVER,0) 
			// The vanilla game over theme is convinced that its a sound effect, so it tries to play in channel one. Thus leaving the music on. 
			// Therefore, I am asking it to play the game over theme directly. While the compatability takes a slight hit, at least it works as intended
		}
	}

	else if (audioID == MUSIC_LEVELCLEAR) // Act clear jingles; I need to figure out how to do the special stages at some point though
	{
		if (objA0.countdown_value == 269) // Shoddy attempt at a special stage check
		{
			if (isMainCharacter(CHARACTER_KNUCKLES))
			{
				if (option.knux.specialclear == 0x08) // If set to the standard character clear theme
				{
					Audio.playAudio("knux-clear",0)
				}
				else if (option.knux.specialclear == 0x18) // If set to the SCD US clear theme
				{
					Audio.playAudio("cdus-clear",0)
				}
			}

			else if (isMainCharacter(CHARACTER_KNUCKLES))
			{
				if (option.knux.specialclear == 0x08) // If set to the standard character clear theme
				{
					Audio.playAudio("knux-clear",0)
				}
				else if (option.knux.specialclear == 0x18) // If set to the SCD US clear theme
				{
					Audio.playAudio("cdus-clear",0)
				}
			}

			else if (isMainCharacter(CHARACTER_TAILS))
			{
				if (option.tails.specialclear == 0x08) // If set to the standard character clear theme
				{
					Audio.playAudio("tails-clear",0)
				}
				else if (option.tails.specialclear == 0x18) // If set to the SCD US clear theme
				{
					Audio.playAudio("cdus-clear",0)
				}
			}

			else if (isMainCharacter(CHARACTER_SONIC))
			{
				if (option.sonic.specialclear == 0x08) // If set to the standard character clear theme
				{
					Audio.playAudio("sonic-clear",0)
				}
				else if (option.sonic.specialclear == 0x18) // If set to the SCD US clear theme
				{
					Audio.playAudio("cdus-clear",0)
				}
			}
		}

		else
		{
			if (isMainCharacter(CHARACTER_KNUCKLES) && option.knux.clear == 1)
			{
				Audio.playAudio("knux-clear",0)
			}
			else if (isMainCharacter(CHARACTER_TAILS) && option.tails.clear == 1)
			{
				Audio.playAudio("tails-clear",0)
			}
			else if (isMainCharacter(CHARACTER_SONIC) && option.sonic.clear == 1)
			{
				Audio.playAudio("sonic-clear",0)
			}
			else
			{
				base.PlayMusic()
			}
		}
	}

	else if (audioID == MUSIC_EXTRALIFE)
	{
		// Extra life jingle
		// These need to be played in the sound effect channel to avoid causing the music to stop. Therefore, we're using the same solution as Eukayrot did for Standalone.playAudio.
		if (isMainCharacter(CHARACTER_KNUCKLES) && option.knux.1up == 1)
		{
			Audio.playOverride("tails-1up", AudioContext.CONTEXT_MUSIC, 1, 0)
		}
		else if (isMainCharacter(CHARACTER_TAILS) && option.tails.1up == 1)
		{
			Audio.playOverride("tails-1up", AudioContext.CONTEXT_MUSIC, 1, 0)
		}
		else if (isMainCharacter(CHARACTER_SONIC) && option.sonic.1up == 1)
		{
			Audio.playOverride("sonic-1up", AudioContext.CONTEXT_MUSIC, 1, 0)
		}
		else
		{
			base.PlayMusic() // Of course, this still functions as it always should.
		}
	}
	
	else if (audioID == MUSIC_SUPER)
	{
		// Super Theme
		// These were a massive pain back in 1.3

		if (isMainCharacter(CHARACTER_KNUCKLES))
		{
			if (super.active == 0xff && option.knux.hyper == 1)
			{
				Audio.playAudio("knux-hyper",0)
			}
			else if (option.knux.super == 1)
			{
				Audio.playAudio("knux-super",0)
			}
			else
			{
				base.PlayMusic() // For some reason, it only notices this particular instance of base.PlayMusic 
			}			
		}

		else if (isMainCharacter(CHARACTER_TAILS))
		{
			if (super.active.tails == 0xff && option.tails.hyper == 1)
			{
				Audio.playAudio("tails-hyper",0)
			}
			else if (option.tails.super == 1)
			{
				Audio.playAudio("tails-super",0)
			}
			else
			{
				base.PlayMusic() // For some reason, it only notices this particular instance of base.PlayMusic 
			}
		}

		else if (isMainCharacter(CHARACTER_SONIC))
		{
			if (super.active == 0xff && option.sonic.hyper == 1)
			{
				Audio.playAudio("sonic-hyper",0)
			}
			else if (option.sonic.super == 1)
			{
				Audio.playAudio("sonic-super",0)
			}
			else
			{
				base.PlayMusic() // For some reason, it only notices this particular instance of base.PlayMusic 
			}
		}
	}

	else if (audioID == MUSIC_CREDITSMEDLEY) // Custom credits theme implementation
	{
		if (isMainCharacter(CHARACTER_KNUCKLES) && option.knux.credits == 1)
		{
			Audio.playAudio("knux-credits",0)
		}
		else if (isMainCharacter(CHARACTER_TAILS) && option.tails.credits == 1)
		{
			Audio.playAudio("tails-credits",0)
		}
		else if (isMainCharacter(CHARACTER_SONIC) && option.sonic.credits == 1)
		{
			Audio.playAudio("sonic-credits",0)
		}
		else
		{
			base.PlayMusic()
		}
	}

	else // And finally, the ultimate compatability enforcer: Fallback base.PlayMusic.
	{
		base.PlayMusic() // If in doubt, get the game to sort it out. I'm a poet, but I actually did knowet.
	}
}
