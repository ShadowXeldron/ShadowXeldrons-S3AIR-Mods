/*
    Seperate Special Stage Music - Part of the Even More Themes project because you can never have too many themes
    You can find it here: https://github.com/ShadowXeldron/ShadowXeldrons-S3AIR-Mods

    Copyright 2024 ShadowXeldron

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   ----------------------------------------------------------------------

   What this means is that this entire script may be included in any of your projects for any reason, even ones that use different licenses are non-reusable, AS LONG AS THE FOLLOWING CONDITIONS ARE OBSERVED:

   1. THIS ENTIRE COMMENT BLOCK MUST NOT BE REMOVED OR EDITED!
   2. YOU MUST PROVIDE ATTRIBUTION (in layman's terms, this means giving credit)
   3. YOU MUST CLEARLY STATE THAT THE SCRIPT IS USED AND CLEARLY STATE EVERY MODIFICATION THAT YOU MADE TO THE SCRIPT (in other words, you have to say what you changed)

*/

/// Preprocessor definition. Useful to check if the mod is active and run specific code if required.
#define HAS_SSSM = 1

// SSSM is too similar to SSRM
function u64 SSSM.getSpecialStageSoundKey(u8 specialstage, bool isSKStage)
{
    if (isSKStage)
        return stringformat("SK_SpecialStage%d", specialstage + 1)
    else
        return stringformat("S3_SpecialStage%d", specialstage + 1)
}

function u64 Standalone.getModdedSoundKey(u64 soundKey, u8 sfxId, u8 soundRegType)
{
    if (soundKey == MUSIC_SPECIALSTAGE && bluespheres.minigame_mode == 0)
        return SSSM.getSpecialStageSoundKey(global.next_bluespheres, global.sk_bluespheres)
    else
        return base.Standalone.getModdedSoundKey(soundKey, sfxId, soundRegType)
}